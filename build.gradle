plugins {
	id "java-library"
}

group = "seung.java"
version = "1.0.32"

[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

java {
	//sourceCompatibility = JavaVersion.VERSION_11
	//targetCompatibility = JavaVersion.VERSION_11
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
	jcenter()
	mavenCentral()
}

dependencies {

	// test
	testImplementation("junit:junit:4.13")
	
	// logger
	implementation("org.slf4j:slf4j-api:1.7.30")
	implementation("org.slf4j:slf4j-simple:1.7.30")
	
	// jakarta
	implementation("jakarta.validation:jakarta.validation-api:2.0.2")
	implementation("jakarta.annotation:jakarta.annotation-api:1.3.5")
	
	// lombok
	api("org.projectlombok:lombok:1.18.12")
	annotationProcessor("org.projectlombok:lombok:1.18.12")
	
	// apache commons
	api("commons-io:commons-io:2.6")
	api("org.apache.commons:commons-lang3:3.8.1")
	api("commons-codec:commons-codec:1.11")
	api("org.apache.commons:commons-text:1.8")
	
	// json
	api("com.fasterxml.jackson.core:jackson-databind:2.9.9.3")
	
	// http
	api("com.konghq:unirest-java:3.7.03")
	
	// bouncycastle
	api("org.bouncycastle:bcprov-jdk15on:1.67")
	api("org.bouncycastle:bcpkix-jdk15on:1.67")
	
	// unzip
	api("net.lingala.zip4j:zip4j:2.9.0")
	
	// poi
	api("org.apache.poi:poi:3.17")
	api("org.apache.poi:poi-ooxml:3.17")
	
	// pdf
	api("org.apache.pdfbox:pdfbox:2.0.22")
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

/*
tasks.withType(Jar) {
	destinationDir = file("../../build/java")
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}
*/

// jitpack
/*
task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives javadocJar
}

// To specify a license in the pom:
install {
	repositories.mavenInstaller {
		pom.project {
			licenses {
				license {
					name 'The Apache Software License, Version 2.0'
					url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					distribution 'repo'
				}
			}
		}
	}
}
*/

/* include dependencies
configurations {
	// include dependencies
	inc
}

jar {
	from {
		configurations.inc.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

dependencies {

	// test
	testImplementation("junit:junit:4.13")
	
	// logger
	implementation("org.slf4j:slf4j-api:1.7.30")
	implementation("org.slf4j:slf4j-simple:1.7.30")
	
	// jakarta
	implementation("jakarta.validation:jakarta.validation-api:2.0.2")
	implementation("jakarta.annotation:jakarta.annotation-api:1.3.5")
	
	// lombok
	api("org.projectlombok:lombok:1.18.12")
	annotationProcessor("org.projectlombok:lombok:1.18.12")
	
	// apache commons
	inc api("commons-io:commons-io:2.6")
	inc api("org.apache.commons:commons-lang3:3.8.1")
	inc api("commons-codec:commons-codec:1.11")
	inc api("org.apache.commons:commons-text:1.8")
	
	// json
	api("com.fasterxml.jackson.core:jackson-databind:2.9.9.3")
	
	// http
	inc api("com.konghq:unirest-java:3.7.03")
	
	// poi
	inc api("org.apache.poi:poi:3.17")
	inc api("org.apache.poi:poi-ooxml:3.17")
	
	// pdf
	inc api("org.apache.pdfbox:pdfbox:2.0.21")
	
	// bouncycastle
	inc api("org.bouncycastle:bcprov-jdk15on:1.67")
	inc api("org.bouncycastle:bcpkix-jdk15on:1.67")
	
	configurations.compile.extendsFrom(configurations.inc)
}
*/
